// <auto-generated />
using System;
using Imputaciones.DataAccess.Services;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ImputacionesBackend.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Imputaciones.DataAccess.Contracts.Entities.Calendar", b =>
                {
                    b.Property<int>("Calendar_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Daily_Hours")
                        .HasColumnType("int");

                    b.Property<bool>("Friday")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("Monday")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("Saturday")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("Sunday")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("Thursday")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("Tuesday")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("Wednesday")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Calendar_Id");

                    b.ToTable("calendars", (string)null);
                });

            modelBuilder.Entity("Imputaciones.DataAccess.Contracts.Entities.Employee", b =>
                {
                    b.Property<int>("Employee_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Calendar_Id")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Employee_Code")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Role_Id")
                        .HasColumnType("int");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Employee_Id");

                    b.HasIndex("Calendar_Id");

                    b.HasIndex("Role_Id");

                    b.ToTable("employees", (string)null);
                });

            modelBuilder.Entity("Imputaciones.DataAccess.Contracts.Entities.Employees_Projects", b =>
                {
                    b.Property<int>("Employees_Projects_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Employee_Id")
                        .HasColumnType("int");

                    b.Property<int>("Project_Id")
                        .HasColumnType("int");

                    b.HasKey("Employees_Projects_Id");

                    b.HasIndex("Employee_Id");

                    b.HasIndex("Project_Id");

                    b.ToTable("employees_projects", (string)null);
                });

            modelBuilder.Entity("Imputaciones.DataAccess.Contracts.Entities.Imputation", b =>
                {
                    b.Property<int>("Imputation_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<int>("Day")
                        .HasColumnType("int");

                    b.Property<int>("Employee_Id")
                        .HasColumnType("int");

                    b.Property<int>("Extra_Hours")
                        .HasColumnType("int");

                    b.Property<int>("Hours")
                        .HasColumnType("int");

                    b.Property<int>("Project_Id")
                        .HasColumnType("int");

                    b.Property<int>("State")
                        .HasColumnType("int");

                    b.Property<int>("Week")
                        .HasColumnType("int");

                    b.HasKey("Imputation_Id");

                    b.HasIndex("Employee_Id");

                    b.HasIndex("Project_Id");

                    b.ToTable("imputations", (string)null);
                });

            modelBuilder.Entity("Imputaciones.DataAccess.Contracts.Entities.Project", b =>
                {
                    b.Property<int>("Project_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Generic")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Responsible_Id")
                        .HasColumnType("int");

                    b.Property<bool>("State")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Project_Id");

                    b.HasIndex("Responsible_Id");

                    b.ToTable("projects", (string)null);
                });

            modelBuilder.Entity("Imputaciones.DataAccess.Contracts.Entities.Role", b =>
                {
                    b.Property<int>("Role_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Role_Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Role_Id");

                    b.ToTable("roles", (string)null);
                });

            modelBuilder.Entity("Imputaciones.DataAccess.Contracts.Entities.Employee", b =>
                {
                    b.HasOne("Imputaciones.DataAccess.Contracts.Entities.Calendar", "Calendar")
                        .WithMany()
                        .HasForeignKey("Calendar_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Imputaciones.DataAccess.Contracts.Entities.Role", "Role")
                        .WithMany()
                        .HasForeignKey("Role_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Calendar");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Imputaciones.DataAccess.Contracts.Entities.Employees_Projects", b =>
                {
                    b.HasOne("Imputaciones.DataAccess.Contracts.Entities.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("Employee_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Imputaciones.DataAccess.Contracts.Entities.Project", "Project")
                        .WithMany()
                        .HasForeignKey("Project_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("Imputaciones.DataAccess.Contracts.Entities.Imputation", b =>
                {
                    b.HasOne("Imputaciones.DataAccess.Contracts.Entities.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("Employee_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Imputaciones.DataAccess.Contracts.Entities.Project", "Project")
                        .WithMany()
                        .HasForeignKey("Project_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("Imputaciones.DataAccess.Contracts.Entities.Project", b =>
                {
                    b.HasOne("Imputaciones.DataAccess.Contracts.Entities.Employee", "Responsible")
                        .WithMany()
                        .HasForeignKey("Responsible_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Responsible");
                });
#pragma warning restore 612, 618
        }
    }
}
